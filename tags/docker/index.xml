<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Peng ganyu blog</title>
    <link>https://xibolun.github.io/tags/docker/</link>
    <description>Recent content in docker on Peng ganyu blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 16 Nov 2020 14:13:01 +0800</lastBuildDate><atom:link href="https://xibolun.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitBook使用Dockerfile</title>
      <link>https://xibolun.github.io/post/docker/gitbook%E4%BD%BF%E7%94%A8dockerfile/</link>
      <pubDate>Mon, 16 Nov 2020 14:13:01 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/docker/gitbook%E4%BD%BF%E7%94%A8dockerfile/</guid>
      <description>GitBook使用Dockerfile 初始化目录 gitbook init 添加文件，编译启动 gitbook serve 编译完成后会生成_book目录 ➜ ll _book total 264 -rw-r--r-- 1 admin staff 22K Nov 16 13:51 Act2A</description>
    </item>
    
    <item>
      <title>Docker守护进程</title>
      <link>https://xibolun.github.io/post/docker/docker%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Wed, 03 Jun 2020 09:37:06 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/docker/docker%E8%BF%9B%E7%A8%8B/</guid>
      <description>Docker进程 当前Docker版本 Client: Version: 1.13.1 API version: 1.26 Package version: docker-1.13.1-203.git0be3e21.el7.centos.x86_64 Go version: go1.10.3 Git commit: 0be3e21/1.13.1 Built: Thu Nov 12 15:11:46 2020 OS/Arch: linux/amd64 Server: Version: 1.13.1 API version: 1.26 (minimum version 1.12) Package version: docker-1.13.1-203.git0be3e21.el7.centos.x86_64 Go version: go1.10.3 Git commit: 0be3e21/1.13.1 Built: Thu Nov 12 15:11:46 2020 OS/Arch: linux/amd64 Experimental: false D</description>
    </item>
    
    <item>
      <title>Docker容器与容器云读书笔记（三）–Network</title>
      <link>https://xibolun.github.io/post/docker/docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E4%BA%91%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B8%89network/</link>
      <pubDate>Fri, 29 May 2020 09:13:38 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/docker/docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E4%BA%91%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B8%89network/</guid>
      <description>网络基础 当启动docker的时候会默认创建一个docker0，这个便是和其他docker进行网络传输的网桥； docker0: flags=4099&amp;lt;UP,BROADCAST,MULTICAST&amp;gt; mtu 1500 inet 172.17.0.1 netmask 255.255.0.0 broadcast 0.0.0.0 ether 02:42:59:bf:40:e7 txqueuelen 0 (Ethernet) RX</description>
    </item>
    
    <item>
      <title>Docker容器与容器云读书笔记（二）–CGroup</title>
      <link>https://xibolun.github.io/post/docker/docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E4%BA%91%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%BA%8Ccgroup/</link>
      <pubDate>Wed, 27 May 2020 09:13:38 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/docker/docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E4%BA%91%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%BA%8Ccgroup/</guid>
      <description>Docker容器与容器云读书笔记（二）–CGroup 术语 需要先知道几个术语 task 任务：即进程或者线程，tasks里面有许多的进程号码 [root@docker-ns 41986]# ll /sys/fs/cgroup/cpu/tasks -rw-r--r-- 1</description>
    </item>
    
    <item>
      <title>Docker容器与容器云读书笔记（一）–Namespace</title>
      <link>https://xibolun.github.io/post/docker/docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E4%BA%91%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B8%80namespace/</link>
      <pubDate>Tue, 26 May 2020 17:59:21 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/docker/docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E4%BA%91%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B8%80namespace/</guid>
      <description>Docker容器与容器云读书笔记（一）–Namespace Linux提供了一系列隔离的API Mount: 隔离文件系统挂载点，CLONE_NEWNS UTS: 隔</description>
    </item>
    
    <item>
      <title>Docker学习</title>
      <link>https://xibolun.github.io/post/docker/docker/</link>
      <pubDate>Tue, 20 Jun 2017 23:36:24 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/docker/docker/</guid>
      <description>Get Started command docker &amp;ndash;version : docker版本 docker command &amp;ndash;help : 查看某个命令的帮助 docker-compose &amp;ndash;version : docker compose版本 docker-machine &amp;ndash;version: docker machine版本 docker version: 查看docker client和s</description>
    </item>
    
  </channel>
</rss>
