<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>saltstack on Peng ganyu blog</title>
    <link>https://xibolun.github.io/tags/saltstack/</link>
    <description>Recent content in saltstack on Peng ganyu blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 01 Jan 2020 22:26:59 +0800</lastBuildDate><atom:link href="https://xibolun.github.io/tags/saltstack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SaltStack(附)自己遇到的一些问题</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E9%99%84%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 01 Jan 2020 22:26:59 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E9%99%84%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</guid>
      <description>Saltstack的问题 执行节点重复 场景: salt-key只有一个，执行结果却有三个 # salt-key -L | grep xmdb xmdb 执行结果 salt xmdb test.ping xmdb: True xmdb: True xmdb: True 能Ping通，却</description>
    </item>
    
    <item>
      <title>SaltStack(十)salt-event</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E5%8D%81salt-event/</link>
      <pubDate>Thu, 07 Nov 2019 16:37:18 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E5%8D%81salt-event/</guid>
      <description>SaltEvent 在salt的架构里面有一个叫sal-event的东西，可以记录着master与 minion通讯时的一些事件信息； 如何监听 监听有两种方式；一</description>
    </item>
    
    <item>
      <title>SaltStack(九)salt-returner</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E4%B9%9Dreturner/</link>
      <pubDate>Tue, 05 Nov 2019 16:37:18 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E4%B9%9Dreturner/</guid>
      <description>Returner salt支持的returners列表 查看当前salt-minion上面支持多少returner，有的环境可以没有装太多的returner salt</description>
    </item>
    
    <item>
      <title>SaltStack(八)salt-api</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E5%85%ABsalt-api/</link>
      <pubDate>Wed, 30 Oct 2019 16:37:18 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E5%85%ABsalt-api/</guid>
      <description>salt-api 环境搭建 salt-api使用 rest_chrrypy 来提供restful服务，同时支持http和https两种模式 安装salt-api yum install salt-api ## 安装时会将 Cher</description>
    </item>
    
    <item>
      <title>SaltStack(七)salt-ssh</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E4%B8%83salt-ssh/</link>
      <pubDate>Sun, 20 Oct 2019 23:01:23 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E4%B8%83salt-ssh/</guid>
      <description>Salt-ssh 创建一个roster，类似ansible的/etc/ansible/hosts配置文件 # /etc/salt/roster 10.0.2.7: host: 10.0.2.7 user: root passwd: Yunjikeji#123 执行密码后第一次连接还需要输入确认</description>
    </item>
    
    <item>
      <title>SaltStack(六)任务管理</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E5%85%AD%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 16 Oct 2019 09:07:03 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E5%85%AD%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/</guid>
      <description>Job管理 salt在执行命令的时候会生成一个JobID，存放在/var/cache/salt/{master|minion}/proc下面 ➜</description>
    </item>
    
    <item>
      <title>SaltStack(五)State</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E4%BA%94state/</link>
      <pubDate>Tue, 15 Oct 2019 14:34:29 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E4%BA%94state/</guid>
      <description>State state是一个描述性文件，类似puppet的脚本，ansible的playbook，描述着需要配置/文件/软件/服务等的最终状态 格式 target_a: #</description>
    </item>
    
    <item>
      <title>SaltStack(四)Grains&amp;Pillar</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E5%9B%9Bgrainspillar/</link>
      <pubDate>Tue, 08 Oct 2019 10:21:40 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E5%9B%9Bgrainspillar/</guid>
      <description>Grains minion的静态属性信息，分为core grains和custom grains core grains 查看grains列表 ➜ ~ sudo salt &amp;#39;AAAAAAAA-0000-0000-BBD1-FA294FBCB7D6&amp;#39; grains.items ➜ ~ sudo salt &amp;#39;AAAAAAAA-0000-0000-BBD1-FA294FBCB7D6&amp;#39; grains.ls 获取某个属性 ➜ ~ sudo salt &amp;#39;AAAAAAAA-0000-0000-BBD1-FA294FBCB7D6&amp;#39;</description>
    </item>
    
    <item>
      <title>SaltStack(三)建立连接</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E4%B8%89%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Tue, 01 Oct 2019 10:21:13 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E4%B8%89%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5/</guid>
      <description>建立通讯 Minion日志 [DEBUG ] Process Manager starting! [68/256] [DEBUG ] Connecting to master. Attempt 1 of 1 ### 获取到master的zmq的地址 [DEBUG ] Master URI: tcp://192.168.1.253:4506 ### 向zmq发送认证信息 [DEBUG ] Initializing new AsyncAuth for (u&amp;#39;/etc/salt/pki/minion&amp;#39;, u&amp;#39;AAAAAAAA-0000-0000-BBD1-FA294FBCB7D6&amp;#39;, u&amp;#39;tcp://192.168.1.253:4506&amp;#39;) [DEBUG</description>
    </item>
    
    <item>
      <title>SaltStack(二)Mac环境搭建</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E4%BA%8Cmac%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Sun, 29 Sep 2019 22:52:49 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E4%BA%8Cmac%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>其他环境 Mac OS本机SaltStack环境搭建 在mac os下部署一个master，并利用两个salt-minion的docker容器搭建一个本</description>
    </item>
    
    <item>
      <title>SaltStack(一)初探</title>
      <link>https://xibolun.github.io/post/saltstack/saltstack%E4%B8%80%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Fri, 27 Sep 2019 16:37:18 +0800</pubDate>
      
      <guid>https://xibolun.github.io/post/saltstack/saltstack%E4%B8%80%E5%88%9D%E6%8E%A2/</guid>
      <description>SaltStack初探 Docker环境搭建 参考github上面的salt-docker-demo master配置的log修改为Info，重启</description>
    </item>
    
  </channel>
</rss>
